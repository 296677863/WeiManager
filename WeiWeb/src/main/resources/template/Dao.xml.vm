<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.dao.${className}Mapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap id="BaseResultMap" type="${package}.model.${className}" >
#foreach($column in $columns)
        <result property="${column.attrname}" column="${column.columnName}"/>
#end
    </resultMap>
<sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 25 14:05:11 CST 2017.
    -->
   #foreach($column in $columns)
	`$column.columnName`#if($velocityCount != $columns.size()), #end
	#end
  </sql>
  
  <sql id="limit_sql">
  	   <if test="page_sql != null and page_sql != ''">
      	${page_sql}
      </if>
  </sql>
  
  <sql id="where_all">
  	<where>
  	<if test="findContent != null and findContent !='' " >
        and (
        LOWER(name) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%") or
        LOWER(type) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")
        )
      </if>
      </where>
  </sql>
  
    <select id="findAll" resultMap="BaseResultMap" >
  	 select 
    <include refid="Base_Column_List" />
    from ${tableName}
    <include refid="where_all"/>
    <include refid="limit_sql" />
  </select>
  
  
  <select id="findCount" resultMap="BaseResultMap" >
 	 select count(${pk.columnName}) from  ${tableName}
  	<include refid="where_all" />
  </select>
  
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ${tableName}
    where ${pk.columnName} = #{${pk.attrname}}
  </select>
  
    <insert id="insertSelective" parameterType="${package}.model.${className}">
    
    <selectKey keyProperty="${pk.columnName}" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ${tableName}
    <trim prefix="(" suffix=")" suffixOverrides=",">   
    #foreach($column in $columns)
	 <if test="$column.attrname != null">
	$column.columnName #if($velocityCount != $columns.size()), #end
	</if>
	#end
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
     #foreach($column in $columns)
	 <if test="$column.attrname != null">
	 #{$column.attrname} #if($velocityCount != $columns.size()), #end
	</if>
	#end
    </trim>
  </insert>
  
   <update id="updateByPrimaryKeySelective" parameterType="${package}.model.${className}">
  
    update ${tableName}
    <set>
	
	#foreach($column in $columns)
	 <if test="$column.attrname != null">
	$column.columnName = #{$column.attrname} #if($velocityCount != $columns.size()), #end
	</if>
	#end
     
    </set>
    where ${pk.columnName} = #{${pk.attrname}}
  </update>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
  
    delete from ${tableName}
    where ${pk.columnName} = #{${pk.attrname}}
  </delete>
  
	 <insert id="insert" parameterType="${package}.model.${className}">
   
    <selectKey keyProperty="${pk.columnName}" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into  ${tableName} 
	(
	#foreach($column in $columns)
	`$column.columnName`#if($velocityCount != $columns.size()), #end
	#end
      )
    values (
	#foreach($column in $columns)

			#{$column.attrname}#if($velocityCount != $columns.size()), #end

		
   #end
	
      )
  </insert>
 



	

	<update id="updateByPrimaryKey" parameterType="${package}.model.${className}">
  
    update ${tableName} 
    		<set>
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
			<if test="$column.attrname != null">`$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()), #end</if>
#end
#end
		</set>
   	where ${pk.columnName} = #{${pk.attrname}}
	</update>
	

</mapper>